---
# Source: datadog/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-datadog
  namespace: default
  labels:
    helm.sh/chart: 'datadog-2.30.10'
    app.kubernetes.io/name: "release-name-datadog"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
    app.kubernetes.io/component: agent
    
spec:
  selector:
    matchLabels:
      app: release-name-datadog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-datadog"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: agent
        app: release-name-datadog
        
      name: release-name-datadog
      annotations:
        checksum/clusteragent_token: 840705f6a0384cb9c19f1081bdf5a0a0cb687306a15c64ecf72e237b5d572900
        checksum/api_key: 684e4675928f4d83e731ceea7a2d1dcb47d51c831a98af768e82f02f1903224b
        checksum/install_info: 694303964ad805dc19e2647d69094f47d63feffbac7545735bfa9b55e0162ae2
        checksum/autoconf-config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
        checksum/confd-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/checksd-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    spec:
      containers:
      - name: agent
        image: "gcr.io/datadoghq/agent:7.33.0"
        imagePullPolicy: IfNotPresent
        command: ["agent", "run"]
        resources:
          {}
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        env:
          # Needs to be removed when Agent N-2 is built with Golang 1.17
          - name: GODEBUG
            value: x509ignoreCN=0
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "release-name-datadog"
                key: api-key
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBERNETES
            value: "yes"
          
          - name: DD_LOG_LEVEL
            value: "INFO"
          - name: DD_DOGSTATSD_PORT
            value: "8125"
          - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
            value: "true"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: release-name-datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                  name: release-name-datadog-cluster-agent
                  key: token
          
          - name: DD_APM_ENABLED
            value: "false"
          - name: DD_LOGS_ENABLED
            value: "true"
          - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            value: "false"
          - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
            value: "true"
          - name: DD_LOGS_CONFIG_AUTO_MULTI_LINE_DETECTION
            value: "false"
          - name: DD_HEALTH_PORT
            value: "5555"
          - name: DD_DOGSTATSD_SOCKET
            value: "/var/run/datadog/dsd.socket"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: "clusterchecks endpointschecks"
          - name: DD_EXPVAR_PORT
            value: "6000"    
        volumeMounts:
          - name: installinfo
            subPath: install_info
            mountPath: /etc/datadog-agent/install_info
            readOnly: true
          - name: logdatadog
            mountPath: /var/log/datadog
          - name: tmpdir
            mountPath: /tmp
            readOnly: false
          - name: config
            mountPath: /etc/datadog-agent
          
          - name: runtimesocketdir
            mountPath: /host/var/run
            mountPropagation: None
            readOnly: true
          
          - name: dsdsocket
            mountPath: /var/run/datadog
          - name: procdir
            mountPath: /host/proc
            mountPropagation: None
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            mountPropagation: None
            readOnly: true
          - name: pointerdir
            mountPath: /opt/datadog-agent/run
            mountPropagation: None
          - name: logpodpath
            mountPath: /var/log/pods
            mountPropagation: None
            readOnly: true
          - name: logscontainerspath
            mountPath: /var/log/containers
            mountPropagation: None
            readOnly: true
          - name: logdockercontainerpath
            mountPath: /var/lib/docker/containers
            mountPropagation: None
            readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
      - name: trace-agent
        image: "gcr.io/datadoghq/agent:7.33.0"
        imagePullPolicy: IfNotPresent
        command: ["trace-agent", "-config=/etc/datadog-agent/datadog.yaml"]
        resources:
          {}
        ports:
        - containerPort: 8126
          hostPort: 8126
          name: traceport
          protocol: TCP
        env:
          # Needs to be removed when Agent N-2 is built with Golang 1.17
          - name: GODEBUG
            value: x509ignoreCN=0
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "release-name-datadog"
                key: api-key
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBERNETES
            value: "yes"
          
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: release-name-datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                  name: release-name-datadog-cluster-agent
                  key: token
          
          - name: DD_LOG_LEVEL
            value: "INFO"
          - name: DD_APM_ENABLED
            value: "true"
          - name: DD_APM_NON_LOCAL_TRAFFIC
            value: "true"
          - name: DD_APM_RECEIVER_PORT
            value: "8126"
          - name: DD_APM_RECEIVER_SOCKET
            value: "/var/run/datadog/apm.socket"
          - name: DD_DOGSTATSD_SOCKET
            value: "/var/run/datadog/dsd.socket"    
        volumeMounts:
          - name: config
            mountPath: /etc/datadog-agent
          - name: logdatadog
            mountPath: /var/log/datadog
          - name: tmpdir
            mountPath: /tmp
            readOnly: false
          - name: dsdsocket
            mountPath: /var/run/datadog
          
          - name: runtimesocketdir
            mountPath: /host/var/run
            mountPropagation: None
            readOnly: true
          
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 15
          tcpSocket:
            port: 8126
          timeoutSeconds: 5
      - name: process-agent
        image: "gcr.io/datadoghq/agent:7.33.0"
        imagePullPolicy: IfNotPresent
        command: ["process-agent", "-config=/etc/datadog-agent/datadog.yaml"]
        resources:
          {}
        env:
          # Needs to be removed when Agent N-2 is built with Golang 1.17
          - name: GODEBUG
            value: x509ignoreCN=0
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "release-name-datadog"
                key: api-key
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBERNETES
            value: "yes"
          
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: release-name-datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                  name: release-name-datadog-cluster-agent
                  key: token
          
          - name: DD_PROCESS_AGENT_DISCOVERY_ENABLED
            value: "false"
          - name: DD_LOG_LEVEL
            value: "INFO"
          - name: DD_SYSTEM_PROBE_ENABLED
            value: "false"
          - name: DD_DOGSTATSD_SOCKET
            value: "/var/run/datadog/dsd.socket"
          - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
            value: "true"    
        volumeMounts:
          - name: config
            mountPath: /etc/datadog-agent
          - name: logdatadog
            mountPath: /var/log/datadog
          - name: tmpdir
            mountPath: /tmp
            readOnly: false
          
          - name: runtimesocketdir
            mountPath: /host/var/run
            mountPropagation: None
            readOnly: true
          
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            mountPropagation: None
            readOnly: true
          - name: passwd
            mountPath: /etc/passwd
            readOnly: true
          - name: procdir
            mountPath: /host/proc
            mountPropagation: None
            readOnly: true
          - name: dsdsocket
            mountPath: /var/run/datadog
            readOnly: true
      initContainers:
          
      - name: init-volume
        image: "gcr.io/datadoghq/agent:7.33.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
          - cp -r /etc/datadog-agent /opt
        volumeMounts:
          - name: config
            mountPath: /opt/datadog-agent
        resources:
          {}
      - name: init-config
        image: "gcr.io/datadoghq/agent:7.33.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
          - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash $script ; done
        volumeMounts:
          - name: logdatadog
            mountPath: /var/log/datadog
          - name: config
            mountPath: /etc/datadog-agent
          - name: procdir
            mountPath: /host/proc
            mountPropagation: None
            readOnly: true
          
          - name: runtimesocketdir
            mountPath: /host/var/run
            mountPropagation: None
            readOnly: true
        env:
          # Needs to be removed when Agent N-2 is built with Golang 1.17
          - name: GODEBUG
            value: x509ignoreCN=0
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "release-name-datadog"
                key: api-key
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBERNETES
            value: "yes"
          
        resources:
          {}
      volumes:
      - name: installinfo
        configMap:
          name: release-name-datadog-installinfo
      - name: config
        emptyDir: {}
        
      - name: logdatadog
        emptyDir: {}
      - name: tmpdir
        emptyDir: {}
      - hostPath:
          path: /proc
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroups
      - hostPath:
          path: /var/run/datadog/
          type: DirectoryOrCreate
        name: dsdsocket
      - hostPath:
          path: /var/run/datadog/
          type: DirectoryOrCreate
        name: apmsocket
      - name: s6-run
        emptyDir: {}
      - hostPath:
          path: /etc/passwd
        name: passwd
      - hostPath:
          path: /var/lib/datadog-agent/logs
        name: pointerdir
      - hostPath:
          path: /var/log/pods
        name: logpodpath
      - hostPath:
          path: /var/log/containers
        name: logscontainerspath
      - hostPath:
          path: /var/lib/docker/containers
        name: logdockercontainerpath
      - hostPath:
          path: /var/run
        name: runtimesocketdir
      tolerations:
      affinity:
        {}
      serviceAccountName: release-name-datadog
      nodeSelector:
        kubernetes.io/os: linux
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
